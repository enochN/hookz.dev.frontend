{"version":3,"sources":["serviceWorker.js","services/webhookz.js","components/home/index.js","components/WebhookData/index.js","components/webhook/index.js","components/layout/index.js","index.js"],"names":["Boolean","window","location","hostname","match","API_URL","process","create","wretch","headers","crossDomain","post","getWebhooksData","webhook","get","Home","className","onClick","json","response","id","name","replace","catch","console","log","WebhookData","details","selectedWebhookIndex","data","JSON","parse","method","url","created_at","ip","src","theme","iconStyle","query","body","WebhookItemListView","select","index","active","key","style","cursor","toLowerCase","ReactTimeAgo","date","httpVersion","Webhook","Paragraph","Typography","Text","useParams","webhookUrl","useState","hooksData","setHooksData","selectedWebhookData","setSelectedWebhookData","setSelectedWebhookIndex","useEffect","JavascriptTimeAgo","locale","en","find","error","length","map","copyable","text","strong","code","obj","hasOwnProperty","isEmpty","Layout","role","href","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1db1fdd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import wretch from \"wretch\";\n\nconst API_URL = `${process.env.REACT_APP_BACKEND_URL}/webhooks`;\n\nexport const create = () => {\n    wretch(API_URL)\n        .headers({\n            \"Access-Control-Allow-Origin\": \"*\",\n            crossDomain: true\n        })\n        .post();\n};\n\nexport const getWebhooksData = webhook => {\n    wretch(`${API_URL}/${webhook}/data`)\n        .headers({\n            \"Access-Control-Allow-Origin\": \"*\",\n            crossDomain: true\n        })\n        .get();\n};\n","import React from \"react\";\nimport \"./styles.css\";\nimport { create } from \"../../services/webhookz\";\n\nfunction Home() {\n    const createWebhook = () => {\n        create()\n            .json(response => {\n                if (response.id.name) {\n                    window.location.replace(`/${response.id.name}`);\n                }\n            })\n            .catch(() => {\n                console.log(\"error making request\");\n            });\n    };\n\n    return (\n        <div className=\"col-md-12 home\">\n            <h1 className=\"d-block mb-5\">\n                Webhooks tester is a free online tool for helping developers\n                test/debug web hooks and other types of HTTP requests.\n            </h1>\n            <span className=\"d-block mb-5 caption\">\n                To get started, click the button below to generate a URL to test\n                your webhook requests.\n            </span>\n            <button onClick={createWebhook} className=\"btn-custom\">\n                <span>Create New Webhook</span>\n            </button>\n        </div>\n    );\n}\nexport default Home;\n","import React from \"react\";\nimport ReactJson from \"react-json-view\";\nimport \"./styles.css\";\n\nconst WebhookData = ({ details, selectedWebhookIndex }) => {\n    const data = JSON.parse(details.data);\n    return (\n        <div>\n            {details.id && (\n                <div className=\"webhook-data-content\">\n                    <p className=\"selected-index\">#{selectedWebhookIndex}</p>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{data.method}</td>\n                                <td>{data.url}</td>\n                            </tr>\n                            <tr>\n                                <td>Date</td>\n                                <td>{details.created_at}</td>\n                            </tr>\n                            <tr>\n                                <td>Host</td>\n                                <td>{data.ip}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <h3 className=\"headers\">Headers</h3>\n                    <ReactJson\n                        src={data.headers}\n                        theme=\"ashes\"\n                        iconStyle=\"circle\"\n                    />\n\n                    <h3 className=\"query\">Query</h3>\n                    <ReactJson src={data.query} theme=\"google\" />\n\n                    <h3 className=\"request-body\">Request Body</h3>\n                    <ReactJson src={data.body} theme=\"greenscreen\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default WebhookData;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { useParams } from \"react-router-dom\";\nimport { getWebhooksData } from \"../../services/webhookz\";\nimport WebhookData from \"../WebhookData\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport JavascriptTimeAgo from \"javascript-time-ago\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { monokai } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { Typography } from \"antd\";\n\nfunction Webhook() {\n    const { Paragraph, Text } = Typography;\n    const { webhook } = useParams();\n    const webhookUrl = `${process.env.REACT_APP_BACKEND_URL}/a/${webhook}`;\n\n    const [hooksData, setHooksData] = useState({});\n    const [selectedWebhookData, setSelectedWebhookData] = useState({});\n    const [selectedWebhookIndex, setSelectedWebhookIndex] = useState(1);\n\n    useEffect(() => {\n        JavascriptTimeAgo.locale(en);\n\n        getWebhooksData(webhook)\n            .json(response => {\n                setHooksData(response);\n\n                const selectedWebhookData = response.find(\n                    data => data.id === response[0].id\n                );\n                setSelectedWebhookData(selectedWebhookData);\n            })\n            .catch(error => {\n                console.log(\"error getting all data \", error);\n            });\n    }, []);\n\n    const select = (id, index) => {\n        const selectedWebhookData = hooksData.find(data => data.id === id);\n        setSelectedWebhookData(selectedWebhookData);\n        setSelectedWebhookIndex(index);\n    };\n\n    const isEmpty = obj => {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) return false;\n        }\n        return true;\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"webhooks-nav\">\n                <p className=\"request-total\">\n                    <span>{hooksData.length}</span> Total Requests\n                </p>\n                <ul>\n                    {hooksData.length > 0 &&\n                        hooksData.map((data, index) => (\n                            <WebhookItemListView\n                                key={data.id}\n                                select={select}\n                                webhook={data}\n                                index={index + 1}\n                                active={index + 1 === selectedWebhookIndex}\n                            />\n                        ))}\n                </ul>\n            </div>\n            <article className=\"webhooks_content\">\n                <p className=\"request-syntax\">\n                    Here's your unique webhook URL. You can now make any kind of\n                    request.\n                    <span>\n                        <b>\n                            <Paragraph copyable={{ text: webhookUrl }}>\n                                <Text strong code>\n                                    {webhookUrl}\n                                </Text>\n                            </Paragraph>\n                        </b>\n                    </span>\n                </p>\n                {/* <p className=\"request-syntax\">\n                    <Text type=\"warning\">\n                        curl -X POST -d 'Catch All Requests!' {webhookUrl}\n                    </Text>\n                </p> */}\n                {isEmpty(selectedWebhookData) ? (\n                    `No request data selected. You can now make any kind of request to ${webhookUrl}`\n                ) : (\n                    <WebhookData\n                        details={selectedWebhookData}\n                        selectedWebhookIndex={selectedWebhookIndex}\n                    />\n                )}\n            </article>\n        </div>\n    );\n}\n\nconst WebhookItemListView = ({ webhook, select, index, active }) => {\n    const data = JSON.parse(webhook.data);\n\n    return (\n        <li\n            key={webhook.id}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => select(webhook.id, index)}\n            className={active ? \"selected\" : \"\"}\n        >\n            <span className=\"counter\">#{index}</span>{\" \"}\n            <span\n                className={`webhook-item-method webhook-item-method-${data.method.toLowerCase()}`}\n            >\n                {data.method}\n            </span>{\" \"}\n            <span className=\"webhook-item-date\">\n                <ReactTimeAgo date={webhook.created_at} />\n            </span>\n            <br />\n            <span className=\"webhook-item-http-version\">\n                HTTP Version: {data.httpVersion}\n            </span>\n        </li>\n    );\n};\n\nexport default Webhook;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../home\";\nimport \"./styles.css\";\nimport Webhook from \"../webhook\";\nimport { create } from \"../../services/webhookz\";\n\nfunction Layout() {\n    const createWebhook = () => {\n        create()\n            .json(response => {\n                if (response.id.name) {\n                    window.location.replace(`/${response.id.name}`);\n                }\n            })\n            .catch(() => {\n                console.log(\"error making request\");\n            });\n    };\n\n    return (\n        <Router>\n            <div className=\"site-wrap\">\n                <div className=\"site-mobile-menu\">\n                    <div className=\"site-mobile-menu-header\">\n                        <div className=\"site-mobile-menu-close mt-3\">\n                            <span className=\"icon-close2 js-menu-toggle\"></span>\n                        </div>\n                    </div>\n                    <div className=\"site-mobile-menu-body\"></div>\n                </div>\n\n                <header className=\"site-navbar py-3\" role=\"banner\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row align-items-center\">\n                            <div className=\"col-11 col-xl-2\">\n                                <h1 className=\"mb-0\">\n                                    <a href=\"/\" className=\"text-white h2 mb-0\">\n                                        Webhooks\n                                        <span className=\"text-primary\">\n                                            Tester\n                                        </span>{\" \"}\n                                    </a>\n                                </h1>\n                            </div>\n                            <div className=\"col-12 col-md-10 d-none d-xl-block\">\n                                <nav\n                                    className=\"site-navigation position-relative text-right\"\n                                    role=\"navigation\"\n                                >\n                                    <ul className=\"site-menu js-clone-nav mx-auto d-none d-lg-block\">\n                                        <li className=\"active\">\n                                            <a href=\"/\">Home</a>\n                                        </li>\n                                        <li>\n                                            <a href=\"/\">About</a>\n                                        </li>\n                                        <li>\n                                            <a href=\"/\">Privacy</a>\n                                        </li>\n                                        <li>\n                                            <a href=\"/\">Github</a>\n                                        </li>\n                                        <li className=\"cta\">\n                                            <a href=\"#\" onClick={createWebhook}>\n                                                New Webhook\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                            <div className=\"d-inline-block d-xl-none ml-md-0 mr-auto py-3\">\n                                <a\n                                    href=\"#\"\n                                    className=\"site-menu-toggle js-menu-toggle text-white\"\n                                >\n                                    <span className=\"icon-menu h3\"></span>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n            </div>\n\n            <div className=\"site-section site-hero\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\">\n                        <Switch>\n                            <Route path=\"/\" exact component={Home} />\n                            <Route path=\"/:webhook\" exact component={Webhook} />\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n            {/* <div className=\"footer\">\n                        <a href=\"https://mandeeya.io\">mandeeya.io </a> |{\" \"}\n                        {new Date().getFullYear()} |{\" \"}\n                        <a className=\"active\" href=\"#\">\n                            Privacy Terms\n                        </a>\n                    </div> */}\n        </Router>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Layout from \"./components/layout\";\n\nReactDOM.render(<Layout />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["serviceWorker.js","services/webhookz.js","components/home/index.js","components/WebhookData/index.js","components/webhook/index.js","components/privacy/index.js","components/about/index.js","components/layout/index.js","index.js"],"names":["Boolean","window","location","hostname","match","API_URL","process","Home","className","onClick","wretch","headers","crossDomain","post","json","response","id","name","replace","catch","console","log","WebhookData","details","selectedWebhookIndex","data","JSON","parse","method","url","created_at","ip","src","theme","iconStyle","query","body","WebhookItemListView","webhook","select","index","active","key","style","cursor","toLowerCase","ReactTimeAgo","date","httpVersion","Webhook","Paragraph","Typography","Text","useParams","webhookUrl","useState","hooksData","setHooksData","selectedWebhookData","setSelectedWebhookData","setSelectedWebhookIndex","useEffect","JavascriptTimeAgo","locale","en","get","find","error","length","map","copyable","text","strong","code","obj","hasOwnProperty","isEmpty","Privacy","About","href","Layout","role","path","exact","component","Date","getFullYear","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c25492a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import wretch from \"wretch\";\n\nexport const API_URL = `${process.env.REACT_APP_BACKEND_URL}/webhooks`;\n\nexport const create = () => {\n    wretch(API_URL)\n        .headers({\n            \"Access-Control-Allow-Origin\": \"*\",\n            crossDomain: true\n        })\n        .post();\n};\n\nexport const getWebhooksData = webhook => {\n    wretch(`${API_URL}/${webhook}/data`)\n        .headers({\n            \"Access-Control-Allow-Origin\": \"*\",\n            crossDomain: true\n        })\n        .get();\n};\n","import React from \"react\";\nimport \"./styles.css\";\nimport wretch from \"wretch\";\nimport { API_URL } from \"../../services/webhookz\";\n\nfunction Home() {\n    const createWebhook = () => {\n        wretch(API_URL)\n            .headers({\n                \"Access-Control-Allow-Origin\": \"*\",\n                crossDomain: true\n            })\n            .post()\n            .json(response => {\n                if (response.id.name) {\n                    window.location.replace(`/${response.id.name}`);\n                }\n            })\n            .catch(() => {\n                console.log(\"error making request\");\n            });\n    };\n\n    return (\n        <div className=\"col-md-12 home\">\n            <h1 className=\"d-block mb-5\">\n                Webhooks tester is a free online tool for helping developers\n                test/debug web hooks and other types of HTTP requests.\n            </h1>\n            <span className=\"d-block mb-5 caption\">\n                To get started, click the button below to generate a URL to test\n                your webhook requests.\n            </span>\n            <button onClick={createWebhook} className=\"btn-custom\">\n                <span>Create New Webhook</span>\n            </button>\n        </div>\n    );\n}\nexport default Home;\n","import React from \"react\";\nimport ReactJson from \"react-json-view\";\nimport \"./styles.css\";\n\nconst WebhookData = ({ details, selectedWebhookIndex }) => {\n    const data = JSON.parse(details.data);\n    return (\n        <div>\n            {details.id && (\n                <div className=\"webhook-data-content\">\n                    <p className=\"selected-index\">#{selectedWebhookIndex}</p>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{data.method}</td>\n                                <td>{data.url}</td>\n                            </tr>\n                            <tr>\n                                <td>Date</td>\n                                <td>{details.created_at}</td>\n                            </tr>\n                            <tr>\n                                <td>Host</td>\n                                <td>{data.ip}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <h3 className=\"headers\">Headers</h3>\n                    <ReactJson\n                        src={data.headers}\n                        theme=\"ashes\"\n                        iconStyle=\"circle\"\n                    />\n\n                    <h3 className=\"query\">Query</h3>\n                    <ReactJson src={data.query} theme=\"google\" />\n\n                    <h3 className=\"request-body\">Request Body</h3>\n                    <ReactJson src={data.body} theme=\"greenscreen\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default WebhookData;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { useParams } from \"react-router-dom\";\nimport { API_URL } from \"../../services/webhookz\";\nimport WebhookData from \"../WebhookData\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport JavascriptTimeAgo from \"javascript-time-ago\";\nimport { Typography } from \"antd\";\nimport wretch from \"wretch\";\n\nfunction Webhook() {\n    const { Paragraph, Text } = Typography;\n    const { webhook } = useParams();\n    const webhookUrl = `${process.env.REACT_APP_BACKEND_URL}/a/${webhook}`;\n\n    const [hooksData, setHooksData] = useState({});\n    const [selectedWebhookData, setSelectedWebhookData] = useState({});\n    const [selectedWebhookIndex, setSelectedWebhookIndex] = useState(1);\n\n    useEffect(() => {\n        JavascriptTimeAgo.locale(en);\n\n        wretch(`${API_URL}/${webhook}/data`)\n            .headers({\n                \"Access-Control-Allow-Origin\": \"*\",\n                crossDomain: true\n            })\n            .get()\n            .json(response => {\n                setHooksData(response);\n\n                const selectedWebhookData = response.find(\n                    data => data.id === response[0].id\n                );\n                setSelectedWebhookData(selectedWebhookData);\n            })\n            .catch(error => {\n                console.log(\"error getting all data \", error);\n            });\n    }, []);\n\n    const select = (id, index) => {\n        const selectedWebhookData = hooksData.find(data => data.id === id);\n        setSelectedWebhookData(selectedWebhookData);\n        setSelectedWebhookIndex(index);\n    };\n\n    const isEmpty = obj => {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) return false;\n        }\n        return true;\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"webhooks-nav\">\n                <p className=\"request-total\">\n                    <span>{hooksData.length}</span> Total Requests\n                </p>\n                <ul>\n                    {hooksData.length > 0 &&\n                        hooksData.map((data, index) => (\n                            <WebhookItemListView\n                                key={data.id}\n                                select={select}\n                                webhook={data}\n                                index={index + 1}\n                                active={index + 1 === selectedWebhookIndex}\n                            />\n                        ))}\n                </ul>\n            </div>\n            <article className=\"webhooks_content\">\n                <p className=\"request-syntax\">\n                    Here's your unique webhook URL. You can now make any kind of\n                    request.\n                    <span>\n                        <b>\n                            <Paragraph copyable={{ text: webhookUrl }}>\n                                <Text strong code>\n                                    {webhookUrl}\n                                </Text>\n                            </Paragraph>\n                        </b>\n                    </span>\n                </p>\n                {/* <p className=\"request-syntax\">\n                    <Text type=\"warning\">\n                        curl -X POST -d 'Catch All Requests!' {webhookUrl}\n                    </Text>\n                </p> */}\n                {isEmpty(selectedWebhookData) ? (\n                    `No request data selected. You can now make any kind of request to ${webhookUrl}`\n                ) : (\n                    <WebhookData\n                        details={selectedWebhookData}\n                        selectedWebhookIndex={selectedWebhookIndex}\n                    />\n                )}\n            </article>\n        </div>\n    );\n}\n\nconst WebhookItemListView = ({ webhook, select, index, active }) => {\n    const data = JSON.parse(webhook.data);\n\n    return (\n        <li\n            key={webhook.id}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => select(webhook.id, index)}\n            className={active ? \"selected\" : \"\"}\n        >\n            <span className=\"counter\">#{index}</span>{\" \"}\n            <span\n                className={`webhook-item-method webhook-item-method-${data.method.toLowerCase()}`}\n            >\n                {data.method}\n            </span>{\" \"}\n            <span className=\"webhook-item-date\">\n                <ReactTimeAgo date={webhook.created_at} />\n            </span>\n            <br />\n            <span className=\"webhook-item-http-version\">\n                HTTP Version: {data.httpVersion}\n            </span>\n        </li>\n    );\n};\n\nexport default Webhook;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction Privacy() {\n    return (\n        <div className=\"privacy-content\">\n            <h3>Privacy Policy for hookz.dev</h3>\n\n            <h4>1. Who We Are</h4>\n            <p>\n                https://hookz.dev is owned by Mandeeya at https://mandeeya.io.\n                Contact: hello@mandeeya.io\n            </p>\n\n            <h4>2. Data collection</h4>\n            <p>\n                By using the services provided to you at hookz.dev, you accept\n                that the following data is stored: <br />\n                Your IP address, for rate limiting\n                <br />\n                Any data that you submit to hookz.dev to be delivered back to\n                the user. <br />\n                The data provided by the user will be permanently deleted after\n                30 days and cannot be recovered.\n            </p>\n\n            <h4>3. Analytics</h4>\n            <p>Google Analytics is used to collect and gather statistics.</p>\n\n            <h4>4. Data Retention</h4>\n            <p>\n                Without user action, all data submitted to hookz.dev for each\n                webhook will be automatically deleted after 30 days.\n            </p>\n\n            <h4>5. Your Rights</h4>\n            <p>\n                If you have used the service and want to delete the data before\n                30 days, there's a delete button which can be used, else, you\n                can send an email to hookz.dev@mandeeya.io\n            </p>\n\n            <h4>6. Where we send your data</h4>\n            <p>\n                We do not share any data provided to hookz.dev with any third\n                party providers. We only save and restore your data to you.\n            </p>\n        </div>\n    );\n}\n\nexport default Privacy;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction About() {\n    return (\n        <div className=\"about-content\">\n            <p>\n                hookz.dev is a free and open source web tool to help developers\n                quickly test webhooks or catch and inspect all http requests.\n            </p>\n            <p>\n                The application is built with{\" \"}\n                <a href=\"https://expressjs.com/\">nodejs/expressjs</a> (backend)\n                and <a href=\"https://reactjs.org/\">reactjs</a> (frontend). View\n                on <a href=\"https://github.com/rasheeda\">github</a>. Backend and\n                Frontend repositories are separate\n            </p>\n        </div>\n    );\n}\n\nexport default About;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../home\";\nimport \"./styles.css\";\nimport Webhook from \"../webhook\";\nimport wretch from \"wretch\";\nimport { API_URL } from \"../../services/webhookz\";\nimport Privacy from \"../privacy\";\nimport About from \"../about\";\n\nfunction Layout() {\n    // making a direct call because exporting services not working because of semi column\n    const createWebhook = () => {\n        wretch(API_URL)\n            .headers({\n                \"Access-Control-Allow-Origin\": \"*\",\n                crossDomain: true\n            })\n            .post()\n            .json(response => {\n                if (response.id.name) {\n                    window.location.replace(`/${response.id.name}`);\n                }\n            })\n            .catch(() => {\n                console.log(\"error making request\");\n            });\n    };\n\n    return (\n        <Router>\n            <div className=\"site-wrap\">\n                <div className=\"site-mobile-menu\">\n                    <div className=\"site-mobile-menu-header\">\n                        <div className=\"site-mobile-menu-close mt-3\">\n                            <span className=\"icon-close2 js-menu-toggle\"></span>\n                        </div>\n                    </div>\n                    <div className=\"site-mobile-menu-body\"></div>\n                </div>\n\n                <header className=\"site-navbar py-3\" role=\"banner\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row align-items-center\">\n                            <div className=\"col-11 col-xl-2\">\n                                <h1 className=\"mb-0 main-logo\">\n                                    <a href=\"/\" className=\"text-white h2 mb-0\">\n                                        hooks\n                                        <span className=\"text-primary\">\n                                            .dev\n                                        </span>{\" \"}\n                                    </a>\n                                </h1>\n                            </div>\n                            <div className=\"col-12 col-md-10 d-none d-xl-block\">\n                                <nav\n                                    className=\"site-navigation position-relative text-right\"\n                                    role=\"navigation\"\n                                >\n                                    <ul className=\"site-menu js-clone-nav mx-auto d-none d-lg-block\">\n                                        <li className=\"active\">\n                                            <a href=\"/\">Home</a>\n                                        </li>\n                                        <li>\n                                            <a href=\"/about\">About</a>\n                                        </li>\n                                        <li>\n                                            <a href=\"https://github.com/rasheeda\">\n                                                Github\n                                            </a>\n                                        </li>\n                                        <li className=\"cta\">\n                                            <a href=\"#\" onClick={createWebhook}>\n                                                New Webhook\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n            </div>\n\n            <div className=\"site-section site-hero\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\">\n                        <Switch>\n                            <Route path=\"/\" exact component={Home} />\n                            <Route path=\"/about\" exact component={About} />\n                            <Route path=\"/privacy\" exact component={Privacy} />\n                            <Route path=\"/:webhook\" exact component={Webhook} />\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n            <div className=\"site-footer\">\n                made with tea by <a href=\"https://mandeeya.io\">mandeeya.io </a>{\" \"}\n                | {new Date().getFullYear()} |{\" \"}\n                <a href=\"/privacy\" className=\"active\">\n                    Privacy Terms\n                </a>\n            </div>\n        </Router>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Layout from \"./components/layout\";\n\nReactDOM.render(<Layout />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}